{"version":3,"sources":["../src/ClerkExpoPasskeys.types.ts"],"sourcesContent":["import type {\n  CredentialReturn,\n  PublicKeyCredentialCreationOptionsWithoutExtensions,\n  PublicKeyCredentialRequestOptionsWithoutExtensions,\n  PublicKeyCredentialWithAuthenticatorAssertionResponse as ClerkPublicKeyCredentialWithAuthenticatorAssertionResponse,\n  PublicKeyCredentialWithAuthenticatorAttestationResponse as ClerkPublicKeyCredentialWithAuthenticatorAttestationResponse,\n} from '@clerk/types';\n\nexport type {\n  PublicKeyCredentialRequestOptionsWithoutExtensions,\n  PublicKeyCredentialCreationOptionsWithoutExtensions,\n  CredentialReturn,\n};\n\ntype AuthenticatorTransportFuture = 'ble' | 'cable' | 'hybrid' | 'internal' | 'nfc' | 'smart-card' | 'usb';\n\ninterface PublicKeyCredentialDescriptorJSON {\n  id: string;\n  type: PublicKeyCredentialType;\n  transports?: AuthenticatorTransportFuture[];\n}\n\n// The serialized JSON to send to \"create\" native module\nexport type SerializedPublicKeyCredentialCreationOptions = Pick<\n  PublicKeyCredentialCreationOptionsWithoutExtensions,\n  'authenticatorSelection' | 'pubKeyCredParams'\n> & {\n  rp: { id: string; name: string };\n  user: {\n    id: string;\n    displayName: string;\n    name: string;\n  };\n  challenge: string;\n  excludeCredentials?: PublicKeyCredentialDescriptorJSON[];\n};\n\n// The serialized JSON to send to \"get\" native module\nexport type SerializedPublicKeyCredentialRequestOptions = Omit<\n  PublicKeyCredentialRequestOptionsWithoutExtensions,\n  'challenge'\n> & {\n  challenge: string;\n};\n\n// The return type from the \"get\" native module.\nexport interface AuthenticationResponseJSON {\n  id: string;\n  rawId: string;\n  response: AuthenticatorAssertionResponseJSON;\n  authenticatorAttachment?: AuthenticatorAttachment;\n  clientExtensionResults: AuthenticationExtensionsClientOutputs;\n  type: PublicKeyCredentialType;\n}\n\n// The serialized response of the native module \"create\" response to be send back to clerk\nexport type PublicKeyCredentialWithAuthenticatorAttestationResponse =\n  ClerkPublicKeyCredentialWithAuthenticatorAttestationResponse & {\n    toJSON: () => any;\n  };\n\ninterface AuthenticatorAssertionResponseJSON {\n  clientDataJSON: string;\n  authenticatorData: string;\n  signature: string;\n  userHandle?: string;\n}\n\n// The serialized response of the native module \"get\" response to be send back to clerk\nexport type PublicKeyCredentialWithAuthenticatorAssertionResponse =\n  ClerkPublicKeyCredentialWithAuthenticatorAssertionResponse & {\n    toJSON: () => any;\n  };\n\ninterface AuthenticatorAttestationResponseJSON {\n  clientDataJSON: string;\n  attestationObject: string;\n  authenticatorData?: string;\n  transports?: AuthenticatorTransportFuture[];\n  publicKeyAlgorithm?: COSEAlgorithmIdentifier;\n  publicKey?: string;\n}\n\n// The type is returned from from native module \"create\" response\nexport interface RegistrationResponseJSON {\n  id: string;\n  rawId: string;\n  response: AuthenticatorAttestationResponseJSON;\n  authenticatorAttachment?: AuthenticatorAttachment;\n  clientExtensionResults: AuthenticationExtensionsClientOutputs;\n  type: PublicKeyCredentialType;\n}\n"],"mappings":";;;;;;;;;;;;;;AAAA;AAAA;","names":[]}