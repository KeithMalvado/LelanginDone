{"version":3,"sources":["../src/utils.ts"],"sourcesContent":["import { Buffer } from 'node:buffer';\n\nimport { ClerkWebAuthnError } from '@clerk/shared/error';\nexport { ClerkWebAuthnError };\n\nexport function encodeBase64(data: ArrayLike<number> | ArrayBufferLike) {\n  return btoa(String.fromCharCode(...new Uint8Array(data)));\n}\n\nexport function encodeBase64Url(data: ArrayLike<number> | ArrayBufferLike) {\n  return encodeBase64(data).replaceAll('=', '').replaceAll('+', '-').replaceAll('/', '_');\n}\n\nexport function decodeBase64Url(data: string) {\n  return decodeBase64(data.replaceAll('-', '+').replaceAll('_', '/'));\n}\n\nexport function decodeToken(data: string) {\n  const base64 = data.replace(/-/g, '+').replace(/_/g, '/');\n  const jsonPayload = decodeURIComponent(\n    atob(base64)\n      .split('')\n      .map(c => '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2))\n      .join(''),\n  );\n  return JSON.parse(jsonPayload);\n}\n\nexport function decodeBase64(data: string) {\n  return Uint8Array.from(atob(data).split(''), x => x.charCodeAt(0));\n}\n\nexport function utf8Decode(buffer: BufferSource) {\n  const textDecoder = new TextDecoder();\n  return textDecoder.decode(buffer);\n}\n\nexport function toArrayBuffer(bufferSource: BufferSource) {\n  if (bufferSource instanceof ArrayBuffer) {\n    return bufferSource; // It's already an ArrayBuffer\n  } else if (ArrayBuffer.isView(bufferSource)) {\n    return bufferSource.buffer; // Extract the ArrayBuffer from the typed array\n  } else {\n    throw new TypeError('Expected a BufferSource, but received an incompatible type.');\n  }\n}\n\nexport function base64urlToArrayBuffer(base64url: string) {\n  const base64 = base64url.replace(/-/g, '+').replace(/_/g, '/');\n\n  const binaryString = Buffer.from(base64, 'base64').toString('binary');\n\n  const len = binaryString.length;\n  const buffer = new ArrayBuffer(len);\n  const uintArray = new Uint8Array(buffer);\n\n  for (let i = 0; i < len; i++) {\n    uintArray[i] = binaryString.charCodeAt(i);\n  }\n\n  return buffer;\n}\n\nexport function arrayBufferToBase64Url(buffer: ArrayBufferLike) {\n  const bytes = new Uint8Array(buffer);\n  let binary = '';\n\n  for (let i = 0; i < bytes.length; i++) {\n    binary += String.fromCharCode(bytes[i]);\n  }\n\n  const base64String = btoa(binary);\n\n  const base64Url = base64String.replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=+$/, '');\n\n  return base64Url;\n}\n\nexport function mapNativeErrorToClerkWebAuthnErrorCode(\n  code: string,\n  message: string,\n  action: 'get' | 'create',\n): ClerkWebAuthnError {\n  if (code === '1000' || code === '1004' || code === 'CreatePublicKeyCredentialDomException') {\n    return new ClerkWebAuthnError(message, {\n      code: action === 'create' ? 'passkey_registration_failed' : 'passkey_retrieval_failed',\n    });\n  }\n  if (\n    code === '1001' ||\n    code === 'CreateCredentialCancellationException' ||\n    code === 'GetCredentialCancellationException'\n  ) {\n    return new ClerkWebAuthnError(message, { code: 'passkey_registration_cancelled' });\n  }\n\n  if (code === '1002') {\n    return new ClerkWebAuthnError(message, { code: 'passkey_invalid_rpID_or_domain' });\n  }\n\n  if (code === '1003' || code === 'CreateCredentialInterruptedException') {\n    return new ClerkWebAuthnError(message, { code: 'passkey_operation_aborted' });\n  }\n\n  return new ClerkWebAuthnError(message, {\n    code: action === 'create' ? 'passkey_registration_failed' : 'passkey_retrieval_failed',\n  });\n}\n"],"mappings":"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","names":[]}